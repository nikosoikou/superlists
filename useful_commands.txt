grep -E "class|def" lists/tests.py

wget -O bootstrap.zip https://github.com/twbs/bootstrap/releases/download/v4.3.1/bootstrap-4.3.1-dist.zip

STAGING_SERVER=superlists-staging.ottg.eu/ python manage.py test functional_tests/

../virtualenv/bin/gunicorn superlists.wsgi:application
../virtualenv/bin/gunicorn --bind unix:/tmp/superlists-staging.ottg.eu.socket superlists.wsgi:application

fab deploy:host=nikos@superlists-staging.nikosoikou.com

sed "s/SITENAME/superlists.nikosoikou.com/g" source/deploy_tools/nginx.template.conf | sudo tee /etc/nginx/sites-available/superlists.nikosoikou.com

sudo ln -s ../sites-available/superlists.nikosoikou.com /etc/nginx/sites-enabled/superlists.nikosoikou.com

sed "s/SITENAME/superlists.nikosoikou.com/g" source/deploy_tools/gunicorn-systemd.template.service | sudo tee /etc/systemd/system/gunicorn-superlists.nikosoikou.com.service


# this command is necessary to tell Systemd to load our new config file (of Systemd for gunicorn)
sudo systemctl daemon-reload


sudo systemctl reload nginx


# This command tells Systemd to always load our service on boot.
# More specifically it creates the symlink:
# /etc/systemd/system/multi-user.target.wants/gunicorn-superlists.nikosoikou.com.service â†’
# /etc/systemd/system/gunicorn-superlists.nikosoikou.com.service
sudo systemctl enable gunicorn-superlists.nikosoikou.com


# this command actually starts our service. In the .service file there is a command to start Gunicorn,
# listening on a socket (instead of on the default port)

sudo systemctl start gunicorn-superlists.nikosoikou.com

# To find nginx errors
sudo cat /var/log/nginx/error.log.1
